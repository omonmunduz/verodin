{"ast":null,"code":"var _jsxFileName = \"/Users/omurbeknazarov/Desktop/verodin/src/components/Accaunt.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport '../index.css';\nimport LoginHistory from './LoginHistory';\nimport { useParams } from 'react-router-dom';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport PersonalInfo from './PersonalInfo';\nimport Component from \"@reactions/component\";\nimport { Pane, Dialog, Button } from 'evergreen-ui';\n\nconst Accaunt = () => {\n  const {\n    _id\n  } = useParams();\n  const {\n    data\n  } = useContext(PeopleContext);\n  const user = data.find(person => person.id === Number(_id));\n  let logins = user.logins;\n  const [stats, setStats] = useState();\n  useEffect(() => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let obj = {\n      byYear: {},\n      byWeek: {}\n    };\n    logins.forEach(login => {\n      const date = new Date(login.date);\n      const day = days[date.getDay()]; // Mon or Tue etc\n\n      obj.byWeek[day] ? obj.byWeek[day]++ : obj.byWeek[day] = 1;\n      const month = months[date.getMonth()];\n      obj.byYear[month] ? obj.byYear[month]++ : obj.byYear[month] = 1;\n    });\n    setStats(obj);\n  }, [logins]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contact-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(PersonalInfo, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(LoginHistory, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Component, {\n    initialState: {\n      isShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }\n  }, ({\n    state,\n    setState\n  }) => /*#__PURE__*/React.createElement(Pane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    isShown: state.isShown,\n    onCloseComplete: () => setState({\n      isShown: false\n    }),\n    hasFooter: false,\n    hasHeader: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Completely custom dialog\"), /*#__PURE__*/React.createElement(Button, {\n    width: \"100%\",\n    onClick: () => setState({\n      isShown: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Show graphs\")))));\n};\n\nexport default Accaunt;","map":{"version":3,"sources":["/Users/omurbeknazarov/Desktop/verodin/src/components/Accaunt.js"],"names":["React","useContext","useState","useEffect","LoginHistory","useParams","PeopleContext","PersonalInfo","Component","Pane","Dialog","Button","Accaunt","_id","data","user","find","person","id","Number","logins","stats","setStats","days","months","obj","byYear","byWeek","forEach","login","date","Date","day","getDay","month","getMonth","isShown","state","setState"],"mappings":"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","sourcesContent":["import React,{useContext, useState,useEffect} from 'react';\nimport '../index.css';\nimport LoginHistory from './LoginHistory';\nimport {useParams} from 'react-router-dom';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport PersonalInfo from './PersonalInfo';\nimport Component from \"@reactions/component\";\nimport {Pane,Dialog,Button} from 'evergreen-ui';\nconst Accaunt = () => {\n    const {_id} = useParams();\n    const {data} = useContext(PeopleContext);\n    const user = data.find(person=>person.id === Number(_id));\n    let logins = user.logins;\n    const [stats,setStats] = useState();\n      useEffect(()=>{\n      const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Aug','Sep','Oct','Nov','Dec'];\n        let obj={\n            byYear:{},\n            byWeek:{}\n          }\n          logins.forEach(login=>{\n            const date = new Date(login.date)\n            const day = days[date.getDay()] // Mon or Tue etc\n            obj.byWeek[day] ? obj.byWeek[day]++ : obj.byWeek[day]=1\n            const month = months[date.getMonth()];\n            obj.byYear[month] ? obj.byYear[month]++ : obj.byYear[month] = 1\n          })\n          setStats(obj)\n    },[logins]);\n    \n    return(\n        <div className=\"user-info-component\">\n           <div id=\"contact-details\">\n           <PersonalInfo user = {user} />\n           <LoginHistory user = {user} />\n\n           <Component initialState={{ isShown: false }}>\n                {({ state, setState }) => (\n                  <Pane>\n                    <Dialog\n                      isShown={state.isShown}\n                      onCloseComplete={() => setState({ isShown: false })}\n                      hasFooter={false}\n                      hasHeader={false}\n                    >\n                      Completely custom dialog\n                    </Dialog>\n\n                    <Button  width='100%' onClick={() => setState({ isShown: true })}>Show graphs</Button>\n                  </Pane>\n                )}\n            </Component>\n           </div>\n        </div>\n    )\n}\nexport default Accaunt;"]},"metadata":{},"sourceType":"module"}