{"ast":null,"code":"var _jsxFileName = \"/Users/omurbeknazarov/Desktop/verodin/src/components/TableComponent.js\";\nimport React, { useContext } from 'react';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport { Table } from 'evergreen-ui';\n\nconst TableComponent = () => {\n  const {\n    data\n  } = useContext(PeopleContext);\n  const names = data.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, item.first_name), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, item.last_name));\n  });\n  return /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.SearchHeaderCell, {\n    placeholder: \"Search by email...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Table.Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Last Name Name\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"City\")), /*#__PURE__*/React.createElement(Table.Body, {\n    height: 240,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, data.map(person => /*#__PURE__*/React.createElement(Table.Row, {\n    key: person.id,\n    isSelectable: true,\n    onSelect: () => alert(person.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table.TextCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, person.first_name), /*#__PURE__*/React.createElement(Table.TextCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, person.last_name), /*#__PURE__*/React.createElement(Table.TextCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, person.city)))));\n};\n\nexport default TableComponent;","map":{"version":3,"sources":["/Users/omurbeknazarov/Desktop/verodin/src/components/TableComponent.js"],"names":["React","useContext","PeopleContext","Table","TableComponent","data","names","map","item","id","first_name","last_name","person","alert","name","city"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,mCAA5B;AACA,SAAQC,KAAR,QAAoB,cAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAASJ,UAAU,CAACC,aAAD,CAAzB;AAEA,QAAMI,KAAK,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAI,IAAE;AACzB,wBACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,UAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,SAAV,CAHJ,CADJ;AAOH,GARa,CAAd;AASI,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,gBAAP;AAAyB,IAAA,WAAW,EAAC,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,oBAAC,KAAD,CAAO,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,oBAAC,KAAD,CAAO,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CAFJ,eAcI,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,MAAM,EAAE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,CAACE,GAAL,CAASK,MAAM,iBAChB,oBAAC,KAAD,CAAO,GAAP;AAAW,IAAA,GAAG,EAAEA,MAAM,CAACH,EAAvB;AAA2B,IAAA,YAAY,MAAvC;AAAwC,IAAA,QAAQ,EAAE,MAAMI,KAAK,CAACD,MAAM,CAACE,IAAR,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBF,MAAM,CAACF,UAAxB,CADJ,eAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBE,MAAM,CAACD,SAAxB,CAFJ,eAGI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBC,MAAM,CAACG,IAAxB,CAHJ,CADC,CADL,CAdJ,CADJ;AA0BH,CAtCD;;AAuCA,eAAeX,cAAf","sourcesContent":["import React,{useContext} from 'react';\nimport {PeopleContext} from '../contexts/PeopleContextProvider';\nimport {Table} from 'evergreen-ui'\n\nconst TableComponent = () => {\nconst {data} = useContext(PeopleContext);\n\nconst names = data.map(item=>{\n    return(\n        <div key={item.id}>\n            \n            <h1>{item.first_name}</h1>\n            <h1>{item.last_name}</h1>\n        </div>\n    )\n})\n    return(\n        <Table>\n            <Table.SearchHeaderCell  placeholder='Search by email...'/>\n            <Table.Head>\n                <Table.TextHeaderCell>\n                    First Name\n                </Table.TextHeaderCell>\n                <Table.TextHeaderCell>\n                    Last Name Name\n                </Table.TextHeaderCell>\n                <Table.TextHeaderCell>\n                    City\n                </Table.TextHeaderCell>\n            </Table.Head>\n\n            <Table.Body height={240}>\n                {data.map(person => (\n                <Table.Row key={person.id} isSelectable onSelect={() => alert(person.name)}>\n                    <Table.TextCell>{person.first_name}</Table.TextCell>\n                    <Table.TextCell>{person.last_name}</Table.TextCell>\n                    <Table.TextCell>{person.city}</Table.TextCell>\n                </Table.Row>\n                ))}\n            </Table.Body>\n      </Table>\n    )\n}\nexport default TableComponent;"]},"metadata":{},"sourceType":"module"}