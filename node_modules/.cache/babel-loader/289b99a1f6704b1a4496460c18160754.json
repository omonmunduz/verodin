{"ast":null,"code":"var _jsxFileName = \"/Users/omurbeknazarov/Desktop/verodin/src/components/Accaunt.js\";\nimport React, { useContext, useState, useLayoutEffect } from 'react';\nimport '../index.css';\nimport LoginHistory from './LoginHistory';\nimport { useParams } from 'react-router-dom';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport PersonalInfo from './PersonalInfo';\nimport UserDetails from './UserDetails';\nimport { Spinner } from 'evergreen-ui';\n\nconst Accaunt = () => {\n  //Display data for individual user.\n  const {\n    data\n  } = useContext(PeopleContext); // get data from context\n\n  const {\n    _id\n  } = useParams(); // get url parameter :_id\n\n  const user = data.find(person => person.id === Number(_id)); // find the clicked user \n\n  let logins = user.logins;\n  const [week, setWeeks] = useState(); // week is an object with values like Mon:13, Tue:5 and etc. set week inside useEffect;\n\n  useLayoutEffect(() => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    let obj = {\n      byWeek: {}\n    };\n    logins.forEach(login => {\n      const date = new Date(login.date);\n      const day = days[date.getDay()]; // get if Mon or Tue etc\n\n      obj.byWeek[day] ? obj.byWeek[day]++ : obj.byWeek[day] = 1;\n    });\n    setWeeks(obj.byWeek);\n  }, [logins]); // run again only if logins array gets changed\n\n  const userDetails = week !== undefined ? /*#__PURE__*/React.createElement(UserDetails, {\n    week: week,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 75\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contact-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(PersonalInfo, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(LoginHistory, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }), userDetails));\n};\n\nexport default Accaunt;","map":{"version":3,"sources":["/Users/omurbeknazarov/Desktop/verodin/src/components/Accaunt.js"],"names":["React","useContext","useState","useLayoutEffect","LoginHistory","useParams","PeopleContext","PersonalInfo","UserDetails","Spinner","Accaunt","data","_id","user","find","person","id","Number","logins","week","setWeeks","days","obj","byWeek","forEach","login","date","Date","day","getDay","userDetails","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,QAA1B,EAAmCC,eAAnC,QAAyD,OAAzD;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,OAAR,QAAsB,cAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB;AACA,QAAM;AAACC,IAAAA;AAAD,MAASV,UAAU,CAACK,aAAD,CAAzB,CAFkB,CAEuB;;AACzC,QAAM;AAACM,IAAAA;AAAD,MAAQP,SAAS,EAAvB,CAHkB,CAGS;;AAC3B,QAAMQ,IAAI,GAAGF,IAAI,CAACG,IAAL,CAAUC,MAAM,IAAEA,MAAM,CAACC,EAAP,KAAcC,MAAM,CAACL,GAAD,CAAtC,CAAb,CAJkB,CAIyC;;AAC3D,MAAIM,MAAM,GAAGL,IAAI,CAACK,MAAlB;AACA,QAAM,CAACC,IAAD,EAAMC,QAAN,IAAkBlB,QAAQ,EAAhC,CANkB,CAMkB;;AAEpCC,EAAAA,eAAe,CAAC,MAAI;AAClB,UAAMkB,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAb;AACE,QAAIC,GAAG,GAAC;AACJC,MAAAA,MAAM,EAAC;AADH,KAAR;AAGEL,IAAAA,MAAM,CAACM,OAAP,CAAeC,KAAK,IAAE;AACpB,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACC,IAAf,CAAb;AACA,YAAME,GAAG,GAAGP,IAAI,CAACK,IAAI,CAACG,MAAL,EAAD,CAAhB,CAFoB,CAEY;;AAChCP,MAAAA,GAAG,CAACC,MAAJ,CAAWK,GAAX,IAAkBN,GAAG,CAACC,MAAJ,CAAWK,GAAX,GAAlB,GAAsCN,GAAG,CAACC,MAAJ,CAAWK,GAAX,IAAkB,CAAxD;AACD,KAJD;AAKAR,IAAAA,QAAQ,CAACE,GAAG,CAACC,MAAL,CAAR;AACL,GAXc,EAWb,CAACL,MAAD,CAXa,CAAf,CARkB,CAmBL;;AAEb,QAAMY,WAAW,GAAGX,IAAI,KAAKY,SAAT,gBAAqB,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEZ,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,gBAAkD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtE;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAIN,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAIA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGCiB,WAHD,CADH,CADJ;AASH,CAhCD;;AAiCA,eAAepB,OAAf","sourcesContent":["import React,{useContext, useState,useLayoutEffect} from 'react';\nimport '../index.css';\nimport LoginHistory from './LoginHistory';\nimport {useParams} from 'react-router-dom';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport PersonalInfo from './PersonalInfo';\nimport UserDetails from './UserDetails';\nimport {Spinner} from 'evergreen-ui';\n\nconst Accaunt = () => {\n    //Display data for individual user.\n    const {data} = useContext(PeopleContext);// get data from context\n    const {_id} = useParams(); // get url parameter :_id\n    const user = data.find(person=>person.id === Number(_id)); // find the clicked user \n    let logins = user.logins;\n    const [week,setWeeks] = useState(); // week is an object with values like Mon:13, Tue:5 and etc. set week inside useEffect;\n    \n    useLayoutEffect(()=>{\n      const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        let obj={\n            byWeek:{}\n          }\n          logins.forEach(login=>{\n            const date = new Date(login.date) \n            const day = days[date.getDay()] // get if Mon or Tue etc\n            obj.byWeek[day] ? obj.byWeek[day]++ : obj.byWeek[day] = 1;\n          })\n          setWeeks(obj.byWeek);\n    },[logins]); // run again only if logins array gets changed\n    \n    const userDetails = week !== undefined ? <UserDetails week={week}/> : <Spinner />\n    \n    return(\n        <div className=\"user-info-component\">\n           <div id=\"contact-details\">\n           <PersonalInfo user = {user} />\n           <LoginHistory user = {user} />\n           {userDetails}\n           </div>\n        </div>\n    )\n}\nexport default Accaunt;"]},"metadata":{},"sourceType":"module"}