{"ast":null,"code":"var _jsxFileName = \"/Users/omurbeknazarov/Desktop/verodin/src/components/TableComponent.js\";\nimport React, { useContext, setState, Fragment } from 'react';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport { Table, Pane, Dialog } from 'evergreen-ui';\n\nconst TableComponent = () => {\n  const {\n    data\n  } = useContext(PeopleContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.SearchHeaderCell, {\n    placeholder: \"Search by email...\",\n    height: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Table.Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"State\")), /*#__PURE__*/React.createElement(Table.Body, {\n    height: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, data.map(person => /*#__PURE__*/React.createElement(Table.Row, {\n    key: person.id,\n    onClick: () => setState({\n      isShown: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    initialState: {\n      isShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, ({\n    state,\n    setState\n  }) => /*#__PURE__*/React.createElement(Pane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    isShown: state.isShown,\n    title: \"No footer\",\n    onCloseComplete: () => setState({\n      isShown: false\n    }),\n    hasFooter: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"No footer\")), \">\"), \"}>\", /*#__PURE__*/React.createElement(Table.TextCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, person.first_name), /*#__PURE__*/React.createElement(Table.TextCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, person.last_name), /*#__PURE__*/React.createElement(Table.TextCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, person.city), /*#__PURE__*/React.createElement(Table.TextCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, person.state))))));\n};\n\nexport default TableComponent;","map":{"version":3,"sources":["/Users/omurbeknazarov/Desktop/verodin/src/components/TableComponent.js"],"names":["React","useContext","setState","Fragment","PeopleContext","Table","Pane","Dialog","TableComponent","data","map","person","id","isShown","state","first_name","last_name","city"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,SAAQC,aAAR,QAA4B,mCAA5B;AACA,SAAQC,KAAR,EAAcC,IAAd,EAAmBC,MAAnB,QAAgC,cAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAASR,UAAU,CAACG,aAAD,CAAzB;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,gBAAP;AAAyB,IAAA,WAAW,EAAC,oBAArC;AAA0D,IAAA,MAAM,EAAE,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,oBAAC,KAAD,CAAO,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAOI,oBAAC,KAAD,CAAO,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI,oBAAC,KAAD,CAAO,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,CAFJ,eAiBI,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,MAAM,EAAE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,IAAI,CAACC,GAAL,CAASC,MAAM,iBAChB,oBAAC,KAAD,CAAO,GAAP;AAAW,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAvB;AAA4B,IAAA,OAAO,EAAE,MAAMV,QAAQ,CAAC;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAU,IAAA,YAAY,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAAC;AAAEC,IAAAA,KAAF;AAASZ,IAAAA;AAAT,GAAD,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEY,KAAK,CAACD,OADjB;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,eAAe,EAAE,MAAMX,QAAQ,CAAC;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAD,CAHjC;AAIE,IAAA,SAAS,EAAE,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFF,MADA,qBAeI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBF,MAAM,CAACI,UAAxB,CAfJ,eAgBI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBJ,MAAM,CAACK,SAAxB,CAhBJ,eAiBI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBL,MAAM,CAACM,IAAxB,CAjBJ,eAkBI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBN,MAAM,CAACG,KAAxB,CAlBJ,CADC,CADL,CAjBJ,CADJ,CADJ;AA8CH,CAjDD;;AAkDA,eAAeN,cAAf","sourcesContent":["import React,{useContext,setState, Fragment} from 'react';\nimport {PeopleContext} from '../contexts/PeopleContextProvider';\nimport {Table,Pane,Dialog} from 'evergreen-ui'\n\nconst TableComponent = () => {\nconst {data} = useContext(PeopleContext);\n\n    return(\n        <div className=\"table-component\">\n            <Table>\n                <Table.SearchHeaderCell  placeholder='Search by email...' height={50}/>\n                <Table.Head>\n                    <Table.TextHeaderCell>\n                        First Name\n                    </Table.TextHeaderCell>\n                    <Table.TextHeaderCell>\n                        Last Name\n                    </Table.TextHeaderCell>\n                    <Table.TextHeaderCell>\n                        City\n                    </Table.TextHeaderCell>\n                    <Table.TextHeaderCell>\n                        State\n                    </Table.TextHeaderCell>\n                </Table.Head>\n\n                <Table.Body height={600}>\n                    {data.map(person => (\n                    <Table.Row key={person.id}  onClick={() => setState({ isShown: true })}>\n                    <Fragment initialState={{ isShown: false }}>\n                    {({ state, setState }) => (\n                      <Pane>\n                        <Dialog\n                          isShown={state.isShown}\n                          title=\"No footer\"\n                          onCloseComplete={() => setState({ isShown: false })}\n                          hasFooter={false}\n                        >\n                          No footer\n                        </Dialog>\n                      </Pane>\n                    )}>\n                  </Fragment>}>\n                        <Table.TextCell>{person.first_name}</Table.TextCell>\n                        <Table.TextCell>{person.last_name}</Table.TextCell>\n                        <Table.TextCell>{person.city}</Table.TextCell>\n                        <Table.TextCell>{person.state}</Table.TextCell>\n                    </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n      </div>\n    )\n}\nexport default TableComponent;"]},"metadata":{},"sourceType":"module"}