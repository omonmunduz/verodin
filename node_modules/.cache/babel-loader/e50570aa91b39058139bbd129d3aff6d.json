{"ast":null,"code":"var _jsxFileName = \"/Users/omurbeknazarov/Desktop/verodin/src/components/Accaunt.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport '../index.css';\nimport LoginHistory from './LoginHistory';\nimport { useParams } from 'react-router-dom';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport PersonalInfo from './PersonalInfo';\nimport Component from \"@reactions/component\";\nimport { Pane, Dialog, Button, Heading } from 'evergreen-ui';\nimport { VictoryChart, VictoryLine, VictoryPie } from \"victory\";\n\nconst Accaunt = () => {\n  const {\n    _id\n  } = useParams();\n  const {\n    data\n  } = useContext(PeopleContext);\n  const user = data.find(person => person.id === Number(_id));\n  let logins = user.logins;\n  const [stats, setStats] = useState();\n  useEffect(() => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let obj = {\n      byYear: {},\n      byWeek: {}\n    };\n    logins.forEach(login => {\n      const date = new Date(login.date);\n      const day = days[date.getDay()]; // Mon or Tue etc\n\n      obj.byWeek[day] ? obj.byWeek[day]++ : obj.byWeek[day] = 1;\n      const month = months[date.getMonth()];\n      obj.byYear[month] ? obj.byYear[month]++ : obj.byYear[month] = 1;\n    });\n    setStats(obj);\n  }, [logins]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contact-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(PersonalInfo, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(LoginHistory, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Component, {\n    initialState: {\n      isShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }, ({\n    state,\n    setState\n  }) => /*#__PURE__*/React.createElement(Pane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    isShown: state.isShown,\n    onCloseComplete: () => setState({\n      isShown: false\n    }),\n    hasFooter: false,\n    hasHeader: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graphs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 27\n    }\n  }, \"Monthly activity\"), /*#__PURE__*/React.createElement(VictoryChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    data: [{\n      x: \"Jan\",\n      y: stats.byMonth.Jan\n    }, {\n      x: \"Feb\",\n      y: stats.byMonth.Feb\n    }, {\n      x: \"Mar\",\n      y: stats.byMonth.Mar\n    }, {\n      x: \"Apr\",\n      y: stats.byMonth.Apr\n    }, {\n      x: \"May\",\n      y: stats.byMonth.May\n    }, {\n      x: \"Jun\",\n      y: stats.byMonth.Jun\n    }, {\n      x: \"Jul\",\n      y: stats.byMonth.Jul\n    }, {\n      x: \"Aug\",\n      y: stats.byMonth.Aug\n    }, {\n      x: \"Sep\",\n      y: stats.byMonth.Sep\n    }, {\n      x: \"Oct\",\n      y: stats.byMonth.Oct\n    }, {\n      x: \"Nov\",\n      y: stats.byMonth.Nov\n    }, {\n      x: \"Dec\",\n      y: stats.byMonth.Dec\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Heading, {\n    size: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 27\n    }\n  }, \"Daily activity\"), /*#__PURE__*/React.createElement(VictoryPie, {\n    colorScale: [\"#084B8A\", \"#00783E\", \"#00783E\", \"#EFBB35\", \"#234361\", \"#008f68\", \"#6DB65B\"],\n    data: [{\n      x: \"Mon\",\n      y: stats.byWeek.Mon\n    }, {\n      x: \"Tue\",\n      y: stats.byWeek.Tue\n    }, {\n      x: \"Wed\",\n      y: stats.byWeek.Wed\n    }, {\n      x: \"Thu\",\n      y: stats.byWeek.Thu\n    }, {\n      x: \"Fri\",\n      y: stats.byWeek.Mon\n    }, {\n      x: \"Sat\",\n      y: stats.byWeek.Sat\n    }, {\n      x: \"Sun\",\n      y: stats.byWeek.Sun\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    width: \"100%\",\n    textAlign: \"center\",\n    onClick: () => setState({\n      isShown: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Show graphs\")))));\n};\n\nexport default Accaunt;","map":{"version":3,"sources":["/Users/omurbeknazarov/Desktop/verodin/src/components/Accaunt.js"],"names":["React","useContext","useState","useEffect","LoginHistory","useParams","PeopleContext","PersonalInfo","Component","Pane","Dialog","Button","Heading","VictoryChart","VictoryLine","VictoryPie","Accaunt","_id","data","user","find","person","id","Number","logins","stats","setStats","days","months","obj","byYear","byWeek","forEach","login","date","Date","day","getDay","month","getMonth","isShown","state","setState","x","y","byMonth","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Mon","Tue","Wed","Thu","Sat","Sun"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,MAApB,EAA2BC,OAA3B,QAAyC,cAAzC;AACA,SAAQC,YAAR,EAAqBC,WAArB,EAAiCC,UAAjC,QAAkD,SAAlD;;AACA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAACC,IAAAA;AAAD,MAAQZ,SAAS,EAAvB;AACA,QAAM;AAACa,IAAAA;AAAD,MAASjB,UAAU,CAACK,aAAD,CAAzB;AACA,QAAMa,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,MAAM,IAAEA,MAAM,CAACC,EAAP,KAAcC,MAAM,CAACN,GAAD,CAAtC,CAAb;AACA,MAAIO,MAAM,GAAGL,IAAI,CAACK,MAAlB;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBxB,QAAQ,EAAjC;AACEC,EAAAA,SAAS,CAAC,MAAI;AACd,UAAMwB,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAb;AACA,UAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,CAAf;AACE,QAAIC,GAAG,GAAC;AACJC,MAAAA,MAAM,EAAC,EADH;AAEJC,MAAAA,MAAM,EAAC;AAFH,KAAR;AAIEP,IAAAA,MAAM,CAACQ,OAAP,CAAeC,KAAK,IAAE;AACpB,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACC,IAAf,CAAb;AACA,YAAME,GAAG,GAAGT,IAAI,CAACO,IAAI,CAACG,MAAL,EAAD,CAAhB,CAFoB,CAEY;;AAChCR,MAAAA,GAAG,CAACE,MAAJ,CAAWK,GAAX,IAAkBP,GAAG,CAACE,MAAJ,CAAWK,GAAX,GAAlB,GAAsCP,GAAG,CAACE,MAAJ,CAAWK,GAAX,IAAgB,CAAtD;AACA,YAAME,KAAK,GAAGV,MAAM,CAACM,IAAI,CAACK,QAAL,EAAD,CAApB;AACAV,MAAAA,GAAG,CAACC,MAAJ,CAAWQ,KAAX,IAAoBT,GAAG,CAACC,MAAJ,CAAWQ,KAAX,GAApB,GAA0CT,GAAG,CAACC,MAAJ,CAAWQ,KAAX,IAAoB,CAA9D;AACD,KAND;AAOAZ,IAAAA,QAAQ,CAACG,GAAD,CAAR;AACL,GAfU,EAeT,CAACL,MAAD,CAfS,CAAT;AAiBF,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAIL,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAIA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAIA,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAE;AAAEqB,MAAAA,OAAO,EAAE;AAAX,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAED,KAAK,CAACD,OADjB;AAEE,IAAA,eAAe,EAAE,MAAME,QAAQ,CAAC;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAD,CAFjC;AAGE,IAAA,SAAS,EAAE,KAHb;AAIE,IAAA,SAAS,EAAE,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEU,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAE,CACF;AAAEG,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcC;AAA7B,KADE,EAEF;AAAEH,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcE;AAA7B,KAFE,EAGF;AAAEJ,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcG;AAA7B,KAHE,EAIF;AAAEL,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcI;AAA7B,KAJE,EAKF;AAAEN,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcK;AAA7B,KALE,EAMF;AAAEP,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcM;AAA7B,KANE,EAOF;AAAER,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcO;AAA7B,KAPE,EAQF;AAAET,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcQ;AAA7B,KARE,EASF;AAAEV,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcS;AAA7B,KATE,EAUF;AAAEX,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcU;AAA7B,KAVE,EAWF;AAAEZ,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcW;AAA7B,KAXE,EAYF;AAAEb,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACoB,OAAN,CAAcY;AAA7B,KAZE,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFV,eAoBI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBJ,eAqBU,oBAAC,UAAD;AACI,IAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA4C,SAA5C,EAAsD,SAAtD,EAAiE,SAAjE,CADhB;AAEI,IAAA,IAAI,EAAE,CACF;AAAEd,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACM,MAAN,CAAa2B;AAA5B,KADE,EAEF;AAAEf,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACM,MAAN,CAAa4B;AAA5B,KAFE,EAGF;AAAEhB,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACM,MAAN,CAAa6B;AAA5B,KAHE,EAIF;AAAEjB,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACM,MAAN,CAAa8B;AAA5B,KAJE,EAKF;AAAElB,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACM,MAAN,CAAa2B;AAA5B,KALE,EAMF;AAAEf,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACM,MAAN,CAAa+B;AAA5B,KANE,EAOF;AAAEnB,MAAAA,CAAC,EAAE,KAAL;AAAYC,MAAAA,CAAC,EAAEnB,KAAK,CAACM,MAAN,CAAagC;AAA5B,KAPE,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBV,CAPF,CADF,eA4CE,oBAAC,MAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAE,MAAMrB,QAAQ,CAAC;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5CF,CAFP,CAJA,CADH,CADJ;AA2DH,CAlFD;;AAmFA,eAAexB,OAAf","sourcesContent":["import React,{useContext, useState,useEffect} from 'react';\nimport '../index.css';\nimport LoginHistory from './LoginHistory';\nimport {useParams} from 'react-router-dom';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport PersonalInfo from './PersonalInfo';\nimport Component from \"@reactions/component\";\nimport {Pane,Dialog,Button,Heading} from 'evergreen-ui';\nimport {VictoryChart,VictoryLine,VictoryPie} from \"victory\";\nconst Accaunt = () => {\n    const {_id} = useParams();\n    const {data} = useContext(PeopleContext);\n    const user = data.find(person=>person.id === Number(_id));\n    let logins = user.logins;\n    const [stats,setStats] = useState();\n      useEffect(()=>{\n      const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Aug','Sep','Oct','Nov','Dec'];\n        let obj={\n            byYear:{},\n            byWeek:{}\n          }\n          logins.forEach(login=>{\n            const date = new Date(login.date)\n            const day = days[date.getDay()] // Mon or Tue etc\n            obj.byWeek[day] ? obj.byWeek[day]++ : obj.byWeek[day]=1\n            const month = months[date.getMonth()];\n            obj.byYear[month] ? obj.byYear[month]++ : obj.byYear[month] = 1\n          })\n          setStats(obj)\n    },[logins]);\n    \n    return(\n        <div className=\"user-info-component\">\n           <div id=\"contact-details\">\n           <PersonalInfo user = {user} />\n           <LoginHistory user = {user} />\n\n           <Component initialState={{ isShown: false }}>\n                {({ state, setState }) => (\n                  <Pane>\n                    <Dialog\n                      isShown={state.isShown}\n                      onCloseComplete={() => setState({ isShown: false })}\n                      hasFooter={false}\n                      hasHeader={false}\n                    >\n                      \n                      <div className=\"graphs\">\n                          <Heading size={800}>Monthly activity</Heading>\n                                <VictoryChart>\n                                    <VictoryLine\n                                        data={[\n                                            { x: \"Jan\", y: stats.byMonth.Jan },\n                                            { x: \"Feb\", y: stats.byMonth.Feb },\n                                            { x: \"Mar\", y: stats.byMonth.Mar },\n                                            { x: \"Apr\", y: stats.byMonth.Apr },\n                                            { x: \"May\", y: stats.byMonth.May },\n                                            { x: \"Jun\", y: stats.byMonth.Jun },\n                                            { x: \"Jul\", y: stats.byMonth.Jul },\n                                            { x: \"Aug\", y: stats.byMonth.Aug },\n                                            { x: \"Sep\", y: stats.byMonth.Sep },\n                                            { x: \"Oct\", y: stats.byMonth.Oct },\n                                            { x: \"Nov\", y: stats.byMonth.Nov },\n                                            { x: \"Dec\", y: stats.byMonth.Dec }\n                                            ]}\n                                    />\n                                </VictoryChart>\n                          <Heading size={800}>Daily activity</Heading>\n                                <VictoryPie\n                                    colorScale={[\"#084B8A\", \"#00783E\", \"#00783E\", \"#EFBB35\",\"#234361\",\"#008f68\", \"#6DB65B\"]}\n                                    data={[\n                                        { x: \"Mon\", y: stats.byWeek.Mon },\n                                        { x: \"Tue\", y: stats.byWeek.Tue },\n                                        { x: \"Wed\", y: stats.byWeek.Wed },\n                                        { x: \"Thu\", y: stats.byWeek.Thu },\n                                        { x: \"Fri\", y: stats.byWeek.Mon },\n                                        { x: \"Sat\", y: stats.byWeek.Sat },\n                                        { x: \"Sun\", y: stats.byWeek.Sun }\n                                        ]}\n                                  />\n                        </div>\n\n                    </Dialog>\n                    <Button  width='100%' textAlign='center' onClick={() => setState({ isShown: true })}>Show graphs</Button>\n                  </Pane>\n                )}\n            </Component>\n           </div>\n        </div>\n    )\n}\nexport default Accaunt;"]},"metadata":{},"sourceType":"module"}