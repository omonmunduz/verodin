{"ast":null,"code":"var _jsxFileName = \"/Users/omurbeknazarov/Desktop/verodin/src/components/TableComponent.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { PeopleContext } from '../contexts/PeopleContextProvider';\nimport '../index.css';\nimport { Table, SearchInput } from 'evergreen-ui';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nconst TableComponent = () => {\n  const {\n    data\n  } = useContext(PeopleContext);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    const results = data.filter(person => person.first_name.toLowerCase().includes(searchTerm));\n    setSearchResults(results);\n  }, [data, searchTerm]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    placeholder: \"filter users by first name...\",\n    onChange: handleChange,\n    value: searchTerm,\n    width: \"100%\",\n    height: 40,\n    marginY: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Table.Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Table.TextHeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Last activity\")), /*#__PURE__*/React.createElement(Table.Body, {\n    height: 700,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, searchResults.map(person => {\n    const dateToFormat = person.logins[person.logins.length - 1].date;\n    return /*#__PURE__*/React.createElement(Link, {\n      to: '/' + person.id,\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      isSelectable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Table.TextCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, `${person.first_name} ${person.last_name}`), /*#__PURE__*/React.createElement(Table.TextCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, person.email), /*#__PURE__*/React.createElement(Table.TextCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, person.city), /*#__PURE__*/React.createElement(Table.TextCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, person.state), /*#__PURE__*/React.createElement(Table.TextCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY/MM/DD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 49\n      }\n    }, dateToFormat))));\n  })))));\n};\n\nexport default TableComponent;","map":{"version":3,"sources":["/Users/omurbeknazarov/Desktop/verodin/src/components/TableComponent.js"],"names":["React","useContext","useState","useEffect","PeopleContext","Table","SearchInput","Link","Moment","TableComponent","data","searchTerm","setSearchTerm","searchResults","setSearchResults","handleChange","event","target","value","results","filter","person","first_name","toLowerCase","includes","map","dateToFormat","logins","length","date","id","last_name","email","city","state"],"mappings":"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","sourcesContent":["import React,{useContext, useState, useEffect} from 'react';\nimport {PeopleContext} from '../contexts/PeopleContextProvider';\nimport '../index.css';\nimport {Table,SearchInput} from 'evergreen-ui'\nimport {Link} from 'react-router-dom';\nimport Moment from 'react-moment';\n\n\nconst TableComponent = () => {\nconst {data} = useContext(PeopleContext);\nconst [searchTerm, setSearchTerm] = useState(\"\");\nconst [searchResults, setSearchResults] = useState([]);\nconst handleChange = event => {setSearchTerm(event.target.value)};\nuseEffect(() => {\n    const results = data.filter(person => person.first_name.toLowerCase().includes(searchTerm));\n    setSearchResults(results);\n  }, [data, searchTerm]);\n    return(\n        <div className=\"table-component\">\n            <div className=\"table-wrapper\">\n                <Table>\n                    <SearchInput placeholder=\"filter users by first name...\" onChange={handleChange} value={searchTerm} width=\"100%\" height={40} marginY={10}/>\n                    <Table.Head>\n                        <Table.TextHeaderCell>\n                            First Name\n                        </Table.TextHeaderCell>\n                        <Table.TextHeaderCell>\n                            Email\n                        </Table.TextHeaderCell>\n                        <Table.TextHeaderCell>\n                            City\n                        </Table.TextHeaderCell>\n                        <Table.TextHeaderCell>\n                            State\n                        </Table.TextHeaderCell>\n                        <Table.TextHeaderCell>\n                            Last activity\n                        </Table.TextHeaderCell>\n                    </Table.Head>\n                    <Table.Body height={700}>\n                        {searchResults.map(person => {\n                            const dateToFormat = person.logins[person.logins.length-1].date;\n                        return(\n                            <Link to={'/' + person.id} key={person.id}>\n                            <Table.Row isSelectable >\n                                <Table.TextCell>{`${person.first_name} ${person.last_name}`}</Table.TextCell>\n                                <Table.TextCell>{person.email}</Table.TextCell>\n                                <Table.TextCell>{person.city}</Table.TextCell>\n                                <Table.TextCell>{person.state}</Table.TextCell>\n                                <Table.TextCell><Moment format=\"YYYY/MM/DD\">{dateToFormat}</Moment></Table.TextCell>\n                            </Table.Row>\n                        </Link>\n                        )\n                        })}\n                    </Table.Body>\n                </Table>\n            </div>\n      </div>\n    )\n}\nexport default TableComponent;"]},"metadata":{},"sourceType":"module"}