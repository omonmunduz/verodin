import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { spacing, dimensions, position, layout } from 'ui-box';
import { withTheme } from '../../theme';
import { Pane } from '../../layers';
import { Text } from '../../typography';

var InlineAlert =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(InlineAlert, _PureComponent);

  function InlineAlert() {
    _classCallCheck(this, InlineAlert);

    return _possibleConstructorReturn(this, _getPrototypeOf(InlineAlert).apply(this, arguments));
  }

  _createClass(InlineAlert, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          children = _this$props.children,
          intent = _this$props.intent,
          hasIcon = _this$props.hasIcon,
          size = _this$props.size,
          props = _objectWithoutProperties(_this$props, ["theme", "children", "intent", "hasIcon", "size"]);

      return React.createElement(Pane, _extends({
        alignItems: "center",
        display: "flex"
      }, props), hasIcon && React.createElement(Pane, {
        display: "inline",
        marginRight: 8
      }, theme.getIconForIntent(intent, {
        size: 14,
        marginTop: 2
      })), React.createElement(Text, {
        size: size,
        fontWeight: 500
      }, children));
    }
  }]);

  return InlineAlert;
}(PureComponent);

InlineAlert.displayName = "InlineAlert";

_defineProperty(InlineAlert, "propTypes", _objectSpread({}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes, {}, dimensions.propTypes, {
  /**
   * The content of the alert.
   */
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),

  /**
   * The intent of the alert. This should always be set explicitly.
   */
  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,

  /**
   * When true, show a icon on the left matching the type.
   * There is no point not showing this.
   */
  hasIcon: PropTypes.bool,

  /**
   * The size of the Text.
   */
  size: PropTypes.number,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: PropTypes.object.isRequired
}));

_defineProperty(InlineAlert, "defaultProps", {
  intent: 'none',
  hasIcon: true,
  size: 400
});

export default withTheme(InlineAlert);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbGVydC9zcmMvSW5saW5lQWxlcnQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQdXJlQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwic3BhY2luZyIsImRpbWVuc2lvbnMiLCJwb3NpdGlvbiIsImxheW91dCIsIndpdGhUaGVtZSIsIlBhbmUiLCJUZXh0IiwiSW5saW5lQWxlcnQiLCJwcm9wcyIsInRoZW1lIiwiY2hpbGRyZW4iLCJpbnRlbnQiLCJoYXNJY29uIiwic2l6ZSIsImdldEljb25Gb3JJbnRlbnQiLCJtYXJnaW5Ub3AiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJub2RlIiwib25lT2YiLCJpc1JlcXVpcmVkIiwiYm9vbCIsIm51bWJlciIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLE9BQVQsRUFBa0JDLFVBQWxCLEVBQThCQyxRQUE5QixFQUF3Q0MsTUFBeEMsUUFBc0QsUUFBdEQ7QUFDQSxTQUFTQyxTQUFULFFBQTBCLGFBQTFCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixjQUFyQjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsa0JBQXJCOztJQUVNQyxXOzs7Ozs7Ozs7Ozs7OzZCQTRDSztBQUFBLHdCQUNzRCxLQUFLQyxLQUQzRDtBQUFBLFVBQ0NDLEtBREQsZUFDQ0EsS0FERDtBQUFBLFVBQ1FDLFFBRFIsZUFDUUEsUUFEUjtBQUFBLFVBQ2tCQyxNQURsQixlQUNrQkEsTUFEbEI7QUFBQSxVQUMwQkMsT0FEMUIsZUFDMEJBLE9BRDFCO0FBQUEsVUFDbUNDLElBRG5DLGVBQ21DQSxJQURuQztBQUFBLFVBQzRDTCxLQUQ1Qzs7QUFHUCxhQUNFLG9CQUFDLElBQUQ7QUFBTSxRQUFBLFVBQVUsRUFBQyxRQUFqQjtBQUEwQixRQUFBLE9BQU8sRUFBQztBQUFsQyxTQUE2Q0EsS0FBN0MsR0FDR0ksT0FBTyxJQUNOLG9CQUFDLElBQUQ7QUFBTSxRQUFBLE9BQU8sRUFBQyxRQUFkO0FBQXVCLFFBQUEsV0FBVyxFQUFFO0FBQXBDLFNBQ0dILEtBQUssQ0FBQ0ssZ0JBQU4sQ0FBdUJILE1BQXZCLEVBQStCO0FBQUVFLFFBQUFBLElBQUksRUFBRSxFQUFSO0FBQVlFLFFBQUFBLFNBQVMsRUFBRTtBQUF2QixPQUEvQixDQURILENBRkosRUFNRSxvQkFBQyxJQUFEO0FBQU0sUUFBQSxJQUFJLEVBQUVGLElBQVo7QUFBa0IsUUFBQSxVQUFVLEVBQUU7QUFBOUIsU0FDR0gsUUFESCxDQU5GLENBREY7QUFZRDs7OztFQTNEdUJaLGE7O0FBQXBCUyxXOztnQkFBQUEsVyxpQ0FLQ1AsT0FBTyxDQUFDZ0IsUyxNQUNSZCxRQUFRLENBQUNjLFMsTUFDVGIsTUFBTSxDQUFDYSxTLE1BQ1BmLFVBQVUsQ0FBQ2UsUztBQUVkOzs7QUFHQU4sRUFBQUEsUUFBUSxFQUFFWCxTQUFTLENBQUNrQixTQUFWLENBQW9CLENBQUNsQixTQUFTLENBQUNtQixNQUFYLEVBQW1CbkIsU0FBUyxDQUFDb0IsSUFBN0IsQ0FBcEIsQzs7QUFFVjs7O0FBR0FSLEVBQUFBLE1BQU0sRUFBRVosU0FBUyxDQUFDcUIsS0FBVixDQUFnQixDQUFDLE1BQUQsRUFBUyxTQUFULEVBQW9CLFNBQXBCLEVBQStCLFFBQS9CLENBQWhCLEVBQ0xDLFU7O0FBRUg7Ozs7QUFJQVQsRUFBQUEsT0FBTyxFQUFFYixTQUFTLENBQUN1QixJOztBQUVuQjs7O0FBR0FULEVBQUFBLElBQUksRUFBRWQsU0FBUyxDQUFDd0IsTTs7QUFFaEI7OztBQUdBZCxFQUFBQSxLQUFLLEVBQUVWLFNBQVMsQ0FBQ3lCLE1BQVYsQ0FBaUJIOzs7Z0JBbkN0QmQsVyxrQkFzQ2tCO0FBQ3BCSSxFQUFBQSxNQUFNLEVBQUUsTUFEWTtBQUVwQkMsRUFBQUEsT0FBTyxFQUFFLElBRlc7QUFHcEJDLEVBQUFBLElBQUksRUFBRTtBQUhjLEM7O0FBd0J4QixlQUFlVCxTQUFTLENBQUNHLFdBQUQsQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgc3BhY2luZywgZGltZW5zaW9ucywgcG9zaXRpb24sIGxheW91dCB9IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uLy4uL3RoZW1lJ1xuaW1wb3J0IHsgUGFuZSB9IGZyb20gJy4uLy4uL2xheWVycydcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuXG5jbGFzcyBJbmxpbmVBbGVydCBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIENvbXBvc2VzIHNvbWUgQm94IEFQSXMuXG4gICAgICovXG4gICAgLi4uc3BhY2luZy5wcm9wVHlwZXMsXG4gICAgLi4ucG9zaXRpb24ucHJvcFR5cGVzLFxuICAgIC4uLmxheW91dC5wcm9wVHlwZXMsXG4gICAgLi4uZGltZW5zaW9ucy5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29udGVudCBvZiB0aGUgYWxlcnQuXG4gICAgICovXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5ub2RlXSksXG5cbiAgICAvKipcbiAgICAgKiBUaGUgaW50ZW50IG9mIHRoZSBhbGVydC4gVGhpcyBzaG91bGQgYWx3YXlzIGJlIHNldCBleHBsaWNpdGx5LlxuICAgICAqL1xuICAgIGludGVudDogUHJvcFR5cGVzLm9uZU9mKFsnbm9uZScsICdzdWNjZXNzJywgJ3dhcm5pbmcnLCAnZGFuZ2VyJ10pXG4gICAgICAuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIFdoZW4gdHJ1ZSwgc2hvdyBhIGljb24gb24gdGhlIGxlZnQgbWF0Y2hpbmcgdGhlIHR5cGUuXG4gICAgICogVGhlcmUgaXMgbm8gcG9pbnQgbm90IHNob3dpbmcgdGhpcy5cbiAgICAgKi9cbiAgICBoYXNJY29uOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIFRoZSBzaXplIG9mIHRoZSBUZXh0LlxuICAgICAqL1xuICAgIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgICAvKipcbiAgICAgKiBUaGVtZSBwcm92aWRlZCBieSBUaGVtZVByb3ZpZGVyLlxuICAgICAqL1xuICAgIHRoZW1lOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaW50ZW50OiAnbm9uZScsXG4gICAgaGFzSWNvbjogdHJ1ZSxcbiAgICBzaXplOiA0MDBcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IHRoZW1lLCBjaGlsZHJlbiwgaW50ZW50LCBoYXNJY29uLCBzaXplLCAuLi5wcm9wcyB9ID0gdGhpcy5wcm9wc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQYW5lIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBkaXNwbGF5PVwiZmxleFwiIHsuLi5wcm9wc30+XG4gICAgICAgIHtoYXNJY29uICYmIChcbiAgICAgICAgICA8UGFuZSBkaXNwbGF5PVwiaW5saW5lXCIgbWFyZ2luUmlnaHQ9ezh9PlxuICAgICAgICAgICAge3RoZW1lLmdldEljb25Gb3JJbnRlbnQoaW50ZW50LCB7IHNpemU6IDE0LCBtYXJnaW5Ub3A6IDIgfSl9XG4gICAgICAgICAgPC9QYW5lPlxuICAgICAgICApfVxuICAgICAgICA8VGV4dCBzaXplPXtzaXplfSBmb250V2VpZ2h0PXs1MDB9PlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9UZXh0PlxuICAgICAgPC9QYW5lPlxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoSW5saW5lQWxlcnQpXG4iXX0=